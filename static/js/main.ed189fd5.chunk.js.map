{"version":3,"sources":["manage-contact/ManageContact.js","Routes.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["ManageContact","props","toggleEditCard","user","setState","toggleEdit","toggleAdd","toggleNew","userDetail","toggleMenu","toggle","state","toggleAddCard","handleSubmit","e","preventDefault","name","getName","value","email","getEmail","phone","getPhone","company","getCompany","address","getAddress","data","id","users","length","real_name","mailid","dispatch","type","handleEditSubmit","this","className","class","onClick","to","href","aria-hidden","placeholder","posts","map","i","key","toggleViewCard","onSubmit","ref","input","required","defaultValue","Component","connect","App","basename","path","exact","postReducer","action","concat","filter","store","createStore","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ed189fd5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './managecontact.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state\r\n    }\r\n}\r\n\r\n\r\nclass ManageContact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            userDetail: {},\r\n            toggle: true,\r\n            toggleNew: false,\r\n            toggleEdit: false,\r\n            toggleAdd: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    toggleViewCard(user) {\r\n        this.setState({ toggleNew: true, toggleEdit: false, userDetail: user })\r\n    }\r\n\r\n    toggleEditCard = (user) => {\r\n        this.setState({ toggleEdit: true, toggleAdd: false, toggleNew: false, userDetail: user });\r\n    }\r\n    toggleMenu = () => {\r\n        this.setState({ toggle: !this.state.toggle })\r\n    }\r\n\r\n    toggleAddCard = () => {\r\n        this.setState({ toggleEdit: false, toggleNew: false, toggleAdd: true })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const name = this.getName.value;\r\n        const email = this.getEmail.value;\r\n        const phone = this.getPhone.value;\r\n        const company = this.getCompany.value;\r\n        const address = this.getAddress.value;\r\n\r\n        const data = {\r\n            id: this.state.users.length + 1,\r\n            real_name: name,\r\n            mailid: email,\r\n            phone: phone,\r\n            company: company,\r\n            address: address\r\n        }\r\n\r\n        this.props.dispatch({\r\n            type: 'ADD_POST',\r\n            data\r\n        });\r\n\r\n        this.getName.value = '';\r\n        this.getEmail.value = '';\r\n        this.getPhone.value = '';\r\n        this.getCompany.value = '';\r\n        this.getAddress.value = '';\r\n\r\n    }\r\n\r\n\r\n    handleEditSubmit = (e) => {\r\n        e.preventDefault();\r\n        const name = this.getName.value;\r\n        const email = this.getEmail.value;\r\n        const phone = this.getPhone.value;\r\n        const company = this.getCompany.value;\r\n        const address = this.getAddress.value;\r\n\r\n        const data = {\r\n            real_name: name,\r\n            mailid: email,\r\n            phone: phone,\r\n            company: company,\r\n            address: address\r\n        }\r\n\r\n        // this.props.dispatch({ type: 'EDIT_POST', id: this.props.posts.id });\r\n        this.props.dispatch({ type: 'UPDATE', id: this.state.userDetail.id, data: data })\r\n        this.setState({ toggleEdit: false })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"wrapper\" className={this.state.toggle ? \"toggled\" : \"\"}>\r\n\r\n                    <aside id=\"sidebar-wrapper\">\r\n                        <div class=\"sidebar-brand\">\r\n                            <i class=\"fa fa-bars\" onClick={this.toggleMenu}></i>\r\n                        </div>\r\n                        <ul class=\"sidebar-nav\">\r\n                            <li class=\"active\">\r\n                                <Link to=\"/user-list\"><i class=\"fa fa-home\"></i>Home</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/user-list\"><i class=\"fa fa-plug\"></i>Plugins</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/user-list\"><i class=\"fa fa-user\"></i>Users</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </aside>\r\n\r\n                    <div id=\"navbar-wrapper\">\r\n                        <nav class=\"navbar navbar-inverse\">\r\n                            <div class=\"container-fluid\">\r\n                                <div class=\"navbar-header\">\r\n                                    <a href=\"#\" class=\"navbar-brand\" id=\"sidebar-toggle\"><i class=\"fa fa-search\"></i></a>\r\n                                </div>\r\n                                <div class=\"navbar-right\">\r\n                                    <ul>\r\n                                        <li>\r\n                                            <i class=\"fa fa-plus\"></i> Add\r\n                                       </li>\r\n                                        <li>\r\n                                            <i class=\"fa fa-envelope-o\"></i>\r\n                                        </li>\r\n                                        <li>\r\n                                            <select className=\"form-control\">\r\n                                                <option value=\"0\"> Mark Henry</option>\r\n                                                <option value=\"0\"> Thomas</option>\r\n                                                <option value=\"0\"> John Mathew</option>\r\n                                            </select>\r\n                                        </li>\r\n                                        <li>\r\n                                            <i class=\"fa fa-bell-o\"></i>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n\r\n\r\n\r\n                    <section id=\"content-wrapper\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-12 contact-section\">\r\n                                <div className=\"contact-title\">\r\n                                    <i class=\"fa fa-address-book\" aria-hidden=\"true\"></i>\r\n                                    <div className=\"\">\r\n                                        <h3>Contacts</h3>\r\n                                        <p>Welcome to CRM contact page</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"contact-sort\">\r\n                                    <label>Sort by :</label>\r\n                                    <select className=\"form-control\">\r\n                                        <option value=\"0\">Date Created</option>\r\n                                        <option value=\"1\">Name</option>\r\n                                        <option value=\"2\">Company</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row contact-search\">\r\n                            <div className=\"col-lg-12 search-col\">\r\n                                <div class=\"form-group \">\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputSuccess2\" placeholder=\"Search contacts\" />\r\n                                    <span class=\"fa fa-search form-control-feedback\"></span>\r\n                                </div>\r\n                                <button className=\"ad-contact\" onClick={this.toggleAddCard}>\r\n                                    <i class=\"fa fa-plus\"></i> Add Contact\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"contact-table\">\r\n                            <div className=\"contact-lfttable\">\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td>Basic info</td>\r\n                                            <td>Company</td>\r\n                                            <td>Action</td>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            this.props.posts.map((user, i) =>\r\n                                                <tr key={user.id}>\r\n                                                    <td>\r\n                                                        <div className=\"ctable-name\" onClick={() => this.toggleViewCard(user)}>\r\n                                                            <i className=\"ctable-icn\">MK</i>\r\n                                                            <div className=\"ctable-namerght\">\r\n                                                                <h4>{user.real_name}</h4>\r\n                                                                <span>{user.mailid}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {user.company}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <i class=\"fa fa-pencil\" aria-hidden=\"true\" onClick={() => this.toggleEditCard(user)}></i>\r\n                                                        <i class=\"fa fa-trash-o\" aria-hidden=\"true\" onClick={() => this.props.dispatch({ type: 'DELETE_POST', id: user.id })}></i>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            {\r\n                                (this.state.toggleNew) ?\r\n                                    <div className=\"contact-rghttable contact-view\">\r\n                                        <div className=\"contact-table-card\">\r\n                                            <div className=\"ctable-name\">\r\n                                                <i className=\"ctable-icn\">NC</i>\r\n                                                <div className=\"ctable-namerght\">\r\n                                                    <h4>{this.state.userDetail.real_name}</h4>\r\n                                                    <span>Product Manager CRM Management</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label>Full name : </label>\r\n                                                <span>{this.state.userDetail.real_name}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label>Email : </label>\r\n                                                <span>{this.state.userDetail.mailid}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label>Phone : </label>\r\n                                                <span>{this.state.userDetail.phone}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label>Company : </label>\r\n                                                <span>{this.state.userDetail.company}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label>Address : </label>\r\n                                                <span>{this.state.userDetail.address}</span>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div> : \"\"\r\n                            }\r\n                            {\r\n\r\n                                (this.state.toggleAdd) ?\r\n                                    <div className=\"contact-rghttable\">\r\n                                        <div className=\"contact-table-card\">\r\n                                            <div className=\"ctable-name\">\r\n                                                <i className=\"ctable-icn\">NC</i>\r\n                                                <div className=\"ctable-namerght\">\r\n                                                    <h4>Create Add Contact</h4>\r\n                                                    <span>Product Manager CRM Management</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <form onSubmit={this.handleSubmit}>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Full name : </label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={(input) => this.getName = input} required />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Email : </label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={(input) => this.getEmail = input} required />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Phone : </label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={(input) => this.getPhone = input} required />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Company : </label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={(input) => this.getCompany = input} required />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Address : </label>\r\n                                                    <textarea className=\"form-control\" ref={(input) => this.getAddress = input} required></textarea>\r\n                                                </div>\r\n                                                <button className=\"ad-contact\">\r\n                                                    Save\r\n                             </button>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div> : \"\"\r\n\r\n                            }\r\n                            {\r\n\r\n                                (this.state.toggleEdit) ?\r\n                                    <div className=\"contact-rghttable\">\r\n                                        <div className=\"contact-table-card\">\r\n                                            <div className=\"ctable-name\">\r\n                                                <i className=\"ctable-icn\">NC</i>\r\n                                                <div className=\"ctable-namerght\">\r\n                                                    <h4>Create Edit Contact</h4>\r\n                                                    <span>Product Manager CRM Management</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <form onSubmit={this.handleEditSubmit}>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Full name : </label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={(input) => this.getName = input} defaultValue={this.state.userDetail.real_name} required />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Email : </label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={(input) => this.getEmail = input} defaultValue={this.state.userDetail.mailid} required />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Phone : </label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={(input) => this.getPhone = input} defaultValue={this.state.userDetail.phone} required />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Company : </label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={(input) => this.getCompany = input} defaultValue={this.state.userDetail.company} required />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Address : </label>\r\n                                                    <textarea className=\"form-control\" ref={(input) => this.getAddress = input} defaultValue={this.state.userDetail.address} required></textarea>\r\n                                                </div>\r\n                                                <button className=\"ad-contact\">\r\n                                                    Save\r\n</button>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div> : \"\"\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </section>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageContact)\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport ManageContact from \"./manage-contact/ManageContact\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router basename=\"/managecontact\">\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <ManageContact />\r\n                </Route>\r\n\r\n\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}","const data = [\r\n    {\r\n        \"id\": 1,\r\n        \"real_name\": \"Egon\",\r\n        \"mailid\": \"egon@gmail.com\",\r\n        \"phone\": \"8797998889\",\r\n        \"company\": \"Amazon Traders\",\r\n        \"address\": \"No 18, Main Street, Canada\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"real_name\": \"Spengler\",\r\n        \"mailid\": \"spengler@gmail.com\",\r\n        \"phone\": \"8797990889\",\r\n        \"company\": \"Amazon Traders\",\r\n        \"address\": \"No 18, Main Street, Canada\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"real_name\": \"Thomas\",\r\n        \"mailid\": \"thomas@gmail.com\",\r\n        \"phone\": \"8797990089\",\r\n        \"company\": \"Amazon Traders\",\r\n        \"address\": \"No 18, Main Street, Canada\"\r\n    }\r\n]\r\n\r\nconst postReducer = (state = data, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_POST':\r\n            return state.concat([action.data]);\r\n        case 'DELETE_POST':\r\n            return state.filter((posts) => posts.id !== action.id);\r\n        case 'UPDATE':\r\n            return state.map((posts) => {\r\n                if (posts.id === action.id) {\r\n                    return {\r\n                        ...posts,\r\n                        real_name: action.data.real_name,\r\n                        mailid: action.data.mailid,\r\n                        phone: action.data.phone,\r\n                        company: action.data.company,\r\n                        address: action.data.address\r\n                    }\r\n                } else return posts;\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default postReducer;","import React from 'react';\nimport Routes from \"./Routes\";\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport postReducer from './reducers/index';\n\nconst store = createStore(postReducer);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}